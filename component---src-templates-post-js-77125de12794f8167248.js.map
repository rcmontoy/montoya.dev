{"version":3,"sources":["webpack:///./src/templates/Post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_Post_module_css__WEBPACK_IMPORTED_MODULE_2__","_Post_module_css__WEBPACK_IMPORTED_MODULE_2___default","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","Post","_ref","markdownRemark","data","html","excerpt","frontmatter","a","createElement","title","description","blogPost","className","styles","date","dangerouslySetInnerHTML","__html","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","props","lang","meta","site","_public_static_d_300035707_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","mergedMeta","name","content","property","author","concat","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","NAV_LINKS","path","Header","react_default","root","nav","brand","gatsby_browser_entry","to","titleLink","links","map","link","key","activeClassName","linkActive","Layout","children","Fragment","components_Header","style","margin","maxWidth","padding","paddingTop"],"mappings":"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","file":"component---src-templates-post-js-77125de12794f8167248.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport styles from './Post.module.css';\nimport SEO from '../components/SEO';\n\nconst Post = ({ data }) => {\n  const { markdownRemark } = data;\n  const {\n    html,\n    excerpt,\n    frontmatter,\n  } = markdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} description={excerpt} blogPost />\n      <div>\n        <h1 className={styles.title}>{frontmatter.title}</h1>\n        <p className={styles.date}>{frontmatter.date}</p>\n        {/* eslint-disable-next-line react/no-danger */}\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { graphql, useStaticQuery } from 'gatsby';\n\n\nconst SEO = (props) => {\n  const {\n    description,\n    lang,\n    meta,\n    title,\n    blogPost,\n  } = props;\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            name\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  // merge with meta passed in as props\n  const mergedMeta = [\n    {\n      name: 'description',\n      content: metaDescription,\n    },\n\n    /**\n     * OpenGraph\n     */\n    {\n      property: 'og:title',\n      content: title,\n    },\n    {\n      property: 'og:description',\n      content: metaDescription,\n    },\n    {\n      property: 'og:type',\n      content: blogPost ? 'article' : 'website',\n    },\n\n    /**\n     * Twitter\n     */\n    {\n      name: 'twitter:card',\n      content: 'summary',\n    },\n    {\n      name: 'twitter:creator',\n      content: site.siteMetadata.author,\n    },\n    {\n      name: 'twitter:title',\n      content: title,\n    },\n    {\n      name: 'twitter:description',\n      content: metaDescription,\n    },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s - ${site.siteMetadata.name}`}\n      meta={mergedMeta}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n  blogPost: false,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  blogPost: PropTypes.bool,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport styles from './Header.module.css';\n\nconst NAV_LINKS = [\n  {\n    path: '/blog',\n    name: 'Blog',\n  },\n  {\n    path: '/me',\n    name: 'Me',\n  },\n  {\n    path: '/contact',\n    name: 'Contact',\n  },\n];\n\nconst Header = () => (\n  <header className={styles.root}>\n    <nav className={styles.nav}>\n      <div className={styles.brand}>\n        <h1 className={styles.title}>\n          <Link to=\"/\" className={styles.titleLink}>\n            Ryan Montoya\n          </Link>\n        </h1>\n      </div>\n      <div className={styles.links}>\n        {NAV_LINKS.map((link) => (\n          <Link\n            to={link.path}\n            key={link.path}\n            activeClassName={styles.linkActive}\n            className={styles.link}\n          >\n            {link.name}\n          </Link>\n        ))}\n      </div>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '0px 1.0875rem 1.45rem',\n        paddingTop: 0,\n      }}\n    >\n      <main>{children}</main>\n      <footer />\n    </div>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}