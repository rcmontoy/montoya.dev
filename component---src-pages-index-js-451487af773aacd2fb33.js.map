{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["IndexPage","site","_public_static_d_2033737731_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","href","siteMetadata","email","github","linkedin","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","_ref","children","Fragment","style","margin","maxWidth","padding","paddingTop","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"gJAwCeA,UAlCG,WAAM,IACdC,EADcC,EAAAC,KACdF,KAcR,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,SACXL,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACG,kEACDF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,+BAAR,qBAGFN,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAI,UAAYT,EAAKU,aAAaC,MAA9B,kBAAP,UACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAI,sBAAwBT,EAAKU,aAAaE,QAAjD,WACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAI,+BAAiCT,EAAKU,aAAaG,SAAnD,KAAP,kDClCZ,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GA8BeI,IApBA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbJ,EAAAZ,EAAAC,cAAAW,EAAAZ,EAAAiB,SAAA,KACEL,EAAAZ,EAAAC,cAAA,OACEiB,MAAO,CACLC,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTC,WAAY,IAGdV,EAAAZ,EAAAC,cAAA,YAAOe,GACPJ,EAAAZ,EAAAC,cAAA,mGCTN,SAASsB,EAATR,GAEG,IADDS,EACCT,EADDS,YAAaC,EACZV,EADYU,KAAMC,EAClBX,EADkBW,KAAMtB,EACxBW,EADwBX,MAEjBR,EADP+B,EAAA7B,KACOF,KAcFgC,EAAkBJ,GAAe5B,EAAKU,aAAakB,YAEzD,OACEzB,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACE8B,eAAgB,CACdL,QAEFrB,MAAOA,EACP2B,cAAa,QAAUnC,EAAKU,aAAaF,MACzCsB,KAAM,CACJ,CACEM,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAAS7B,GAEX,CACE8B,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASrC,EAAKU,aAAa6B,QAE7B,CACEH,KAAM,gBACNC,QAAS7B,GAEX,CACE4B,KAAM,sBACNC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD","file":"component---src-pages-index-js-451487af773aacd2fb33.js","sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            email\n            github\n            linkedin\n          }\n        }\n      }\n    `,\n  );\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <h1>Ryan Montoya</h1>\n      <p>\n        {'Building a marketplace for insurance linked securities (ILS) @ '}\n        <a href=\"https://ledgerinvesting.com\">Ledger Investing</a>\n      </p>\n\n      <h3>Links</h3>\n      <ul>\n        <li><a href={`mailto:${site.siteMetadata.email}?subject=Hello`}>Email</a></li>\n        <li><a href={`https://github.com/${site.siteMetadata.github}`}>GitHub</a></li>\n        <li><a href={`https://www.linkedin.com/in/${site.siteMetadata.linkedin}/`}>LinkedIn</a></li>\n      </ul>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Layout = ({ children }) => (\n  <>\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '0px 1.0875rem 1.45rem',\n        paddingTop: 0,\n      }}\n    >\n      <main>{children}</main>\n      <footer />\n    </div>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}