{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./node_modules/gatsby-plugin-gtag/index.js"],"names":["IndexPage","site","_public_static_d_2033737731_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","href","gatsby_plugin_gtag__WEBPACK_IMPORTED_MODULE_2__","siteMetadata","email","github","linkedin","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","_ref","children","Fragment","style","margin","maxWidth","padding","paddingTop","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Object","defineProperty","exports","value","OutboundLink","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react2","_interopRequireDefault","require","_propTypes2","obj","__esModule","default","props","onClick","e","redirect","button","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","toLowerCase","window","gtag","event_category","event_label","transport_type","event_callback","document","location","propTypes","string","func"],"mappings":"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","file":"component---src-pages-index-js-4a8eb105346e93e0a6af.js","sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { OutboundLink } from 'gatsby-plugin-gtag';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            email\n            github\n            linkedin\n          }\n        }\n      }\n    `,\n  );\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <h1>Ryan Montoya</h1>\n      <p>\n        {'Building a marketplace for insurance linked securities (ILS) @ '}\n        <a href=\"https://ledgerinvesting.com\">Ledger Investing</a>\n      </p>\n\n      <h3>Links</h3>\n      <ul>\n        <li>\n          <OutboundLink href={`mailto:${site.siteMetadata.email}?subject=Hello`}>\n            Email\n          </OutboundLink>\n        </li>\n        <li>\n          <OutboundLink href={`https://github.com/${site.siteMetadata.github}`}>\n            GitHub\n          </OutboundLink>\n        </li>\n        <li>\n          <OutboundLink href={`https://www.linkedin.com/in/${site.siteMetadata.linkedin}/`}>\n            LinkedIn\n          </OutboundLink>\n        </li>\n      </ul>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Layout = ({ children }) => (\n  <>\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '0px 1.0875rem 1.45rem',\n        paddingTop: 0,\n      }}\n    >\n      <main>{children}</main>\n      <footer />\n    </div>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OutboundLink = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**\n                                                                                                                                                                                                                                                                   * Code from OutboundLink module in gatsby-plugin-google-analytics\n                                                                                                                                                                                                                                                                   * modified for gtag\n                                                                                                                                                                                                                                                                   */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction OutboundLink(props) {\n  return _react2.default.createElement('a', _extends({}, props, {\n    onClick: function onClick(e) {\n      if (typeof props.onClick === 'function') {\n        props.onClick();\n      }\n      var redirect = true;\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n      if (props.target && props.target.toLowerCase() !== '_self') {\n        redirect = false;\n      }\n\n      if (window.gtag) {\n        window.gtag('event', 'click', {\n          event_category: 'outbound',\n          event_label: props.href,\n          transport_type: 'beacon',\n          event_callback: function event_callback() {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n\n      return false;\n    }\n  }));\n}\n\nOutboundLink.propTypes = {\n  href: _propTypes2.default.string,\n  target: _propTypes2.default.string,\n  onClick: _propTypes2.default.func\n};\n\nexports.OutboundLink = OutboundLink;"],"sourceRoot":""}